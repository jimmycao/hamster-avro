#include <stdio.h>
#include <stdlib.h>

#include <avro.h>
#include "src/common.h"

void add_person(avro_schema_t schema, avro_writer_t writer, char *name, long weight, long height)
{
	avro_value_iface_t *iface;
	avro_value_t record;

	avro_value_t name_value;
	avro_value_t weight_value;
	avro_value_t height_value;
	size_t index;

	iface = avro_generic_class_from_schema(schema);
	avro_generic_value_new(iface, &record);


	avro_value_get_by_name(&record, "name", &name_value, &index);
	avro_value_set_string(&name_value, name);

	avro_value_get_by_name(&record, "weight", &weight_value, &index);
	avro_value_set_long(&weight_value, weight);

	avro_value_get_by_name(&record, "height", &height_value, &index);
	avro_value_set_long(&height_value, height);

	if (avro_value_write(writer, &record)) {
		fprintf(stderr, "Unable to write person record to memory buffer\n, Message: %s\n", avro_strerror());
		exit(1);
	}

//	avro_generic_value_free(&record);
	avro_value_iface_decref(iface);
	avro_schema_decref(schema);

//	avro_value_decref(&name_value);
//	avro_value_decref(&weight_value);
//	avro_value_decref(&height_value);
//	avro_value_decref(&record);
}

int main(int argc, const char * argv[])
{
	char* schema_filepath = "../schema/person.schema";
	avro_schema_t schema;

	char buffer[4096];
		avro_writer_t writer;
		int64_t size;
		char* db_filepath = "../data/person.db";
		FILE* dbfile;


	init_schema(schema_filepath, &schema);

	/* 0. create a writer with memory buffer */
	writer = avro_writer_memory(buffer, sizeof(buffer));

	/* 1. write a record to writer (in memory) */
	add_person(schema, writer, "xi", 65, 178);
	avro_writer_flush(writer);


	/* 2. write the writer (record in memory) to dbfile */
	size = avro_writer_tell(writer);
	//avro_writer_dump(writer, stderr);
	remove(db_filepath);
	dbfile = fopen(db_filepath, "w");
	size_t length = fwrite(buffer, sizeof(char), size, dbfile);
	printf("write %ld chars\n", length);
	fclose(dbfile);


    return 0;
}
